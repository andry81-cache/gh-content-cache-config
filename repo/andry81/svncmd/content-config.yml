# Tutorial to use with: https://github.com/andry81-devops/accum-content
#

content-config:

  entries:

    - init:
        #shell: bash
        ## Input variables:
        ##   GH_WORKFLOW_ROOT
        ##
        ## CAUTION:
        ##   First line must be a shebang line, otherwise each script line will run in a child bash process!
        ##
        #run: |
        #  #!/bin/bash
        #  exit 0

      dirs:

        - dir:            badges/traffic/views
          schedule:
            next-update:
              timestamp: 04:00Z

          files:

            - file:       all.svg
              query-url:  https://img.shields.io/badge/dynamic/json?color=success&label=views|all&query=count&url=https://github.com/andry81-stats/svncmd--gh-stats/raw/master/traffic/views/latest-accum.json?raw=True&logo=github

            - file:       all-14d.svg
              query-url:  https://img.shields.io/badge/dynamic/json?color=success&label=14d&query=count&url=https://github.com/andry81-stats/svncmd--gh-stats/raw/master/traffic/views/latest.json?raw=True

            - file:       unq.svg
              query-url:  https://img.shields.io/badge/dynamic/json?color=success&label=views|unq&query=uniques&url=https://github.com/andry81-stats/svncmd--gh-stats/raw/master/traffic/views/latest-accum.json?raw=True&logo=github

            - file:       unq-14d.svg
              query-url:  https://img.shields.io/badge/dynamic/json?color=success&label=14d&query=uniques&url=https://github.com/andry81-stats/svncmd--gh-stats/raw/master/traffic/views/latest.json?raw=True

        - dir:            badges/traffic/clones
          schedule:
            next-update:
              timestamp: 04:00Z

          files:

            - file:       all.svg
              query-url:  https://img.shields.io/badge/dynamic/json?color=success&label=clones|all&query=count&url=https://github.com/andry81-stats/svncmd--gh-stats/raw/master/traffic/clones/latest-accum.json?raw=True&logo=github

            - file:       all-14d.svg
              query-url:  https://img.shields.io/badge/dynamic/json?color=success&label=14d&query=count&url=https://github.com/andry81-stats/svncmd--gh-stats/raw/master/traffic/clones/latest.json?raw=True

            - file:       unq.svg
              query-url:  https://img.shields.io/badge/dynamic/json?color=success&label=clones|unq&query=uniques&url=https://github.com/andry81-stats/svncmd--gh-stats/raw/master/traffic/clones/latest-accum.json?raw=True&logo=github

            - file:       unq-14d.svg
              query-url:  https://img.shields.io/badge/dynamic/json?color=success&label=14d&query=uniques&url=https://github.com/andry81-stats/svncmd--gh-stats/raw/master/traffic/clones/latest.json?raw=True

        - dir:            badges/metrics
          schedule:
            next-update:
              timestamp: 08:00Z

          files:

            - file:       codefactor-grade.svg
              #           https://www.codefactor.io/repository/github/andry81/svncmd/badge
              query-url:  https://img.shields.io/codefactor/grade/github/andry81/svncmd?label=quality&logo=codefactor

            - file:       codacy-grade.svg
              #           https://app.codacy.com/project/badge/Grade/fbda77985c50456aab14d52d41570889
              query-url:  https://img.shields.io/codacy/grade/fbda77985c50456aab14d52d41570889?label=quality&logo=codacy

            - file:       lgtm-grade-python.svg
              query-url:  https://img.shields.io/lgtm/grade/python/github/andry81/svncmd.svg?label=quality:%20python&logo=lgtm

            - file:       lgtm-alerts.svg
              query-url:  https://img.shields.io/lgtm/alerts/github/andry81/svncmd?label=alerts&logo=lgtm

            - file:       codeclimate-maintainability.svg
              query-url:  https://api.codeclimate.com/v1/badges/3ba9415721d7f3bfafec/maintainability?logo=codeclimate

            - file:       codeclimate-issues.svg
              query-url:  https://img.shields.io/codeclimate/issues/andry81/svncmd?logo=codeclimate

            - file:       codeclimate-tech-debt.svg
              query-url:  https://img.shields.io/codeclimate/tech-debt/andry81/svncmd?logo=codeclimate

        - dir:            badges/metrics
          schedule:
            next-update:
              timestamp: 08:00Z

          files:

            - file:       shields-repo-size.svg
              query-url:  https://img.shields.io/github/repo-size/andry81/svncmd?logo=github

            - file:       shields-code-size.svg
              query-url:  https://img.shields.io/github/languages/code-size/andry81/svncmd?logo=github

            - file:       tokei-lines-of-code.svg
              query-url:  https://tokei.rs/b1/github/andry81/svncmd?category=code

              download-validate:
                shell: bash
                # Input variables:
                #   GH_WORKFLOW_ROOT,
                #   IS_STORED_FILE_EXIST, STORED_FILE, STORED_FILE_SIZE, STORED_FILE_HASH,
                #   DOWNLOADED_FILE, DOWNLOADED_FILE_SIZE, DOWNLOADED_FILE_HASH
                #
                # CAUTION:
                #   First line must be a shebang line, otherwise each script line will run in a child bash process!
                #
                run: |
                  #!/bin/bash
                  
                  source "$GH_WORKFLOW_ROOT/_externals/tacklelib/bash/tacklelib/bash_tacklelib" || exit 255
                  
                  tkl_include_or_abort "$GH_WORKFLOW_ROOT/bash/github/init-xq-workflow.sh"
                  
                  if (( ${#XQ_CMDLINE_READ[@]} )); then
                    IFS=$'\n' read -r value <<< "$("${XQ_CMDLINE_READ[@]}" '.svg.g[1].text[3]."#text"' "$DOWNLOADED_FILE")" || exit 255
                  elif (( ${#XMLSTARLET_CMDLINE_SEL[@]} )); then
                    value="$(sed 's/<svg [^>]*/<svg/' "$DOWNLOADED_FILE" | "${XMLSTARLET_CMDLINE_SEL[@]}" -t -v "//svg/g[2]/text[4]")" || exit 255
                  else
                    exit 255
                  fi
                  
                  value="${value//[ $'\t'a-zA-Z]/}"
                  value_int="${value%.*}"
                  value_fract="${value#*.}"
                  [[ "$value_fract" == "$value" ]] && value_fract=0
                  (( value_int || value_fract )) && exit 0
                  
                  exit 255

            #- file:       tokei-lines.svg
            #  query-url:  https://img.shields.io/tokei/lines/github/andry81/svncmd?logo=tokei
